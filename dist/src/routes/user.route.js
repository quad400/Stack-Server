"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userRoutes = void 0;
const express_1 = require("express");
const validators_helper_1 = require("../utils/helpers/validators.helper");
const user_dto_1 = require("../dto/user.dto");
const exception_middleware_1 = require("../middlewares/exception.middleware");
const user_controller_1 = require("../controllers/user.controller");
const auth_middleware_1 = require("../middlewares/auth.middleware");
exports.userRoutes = (0, express_1.Router)();
const userController = new user_controller_1.UserController();
exports.userRoutes.post("/register", (0, validators_helper_1.validator)({ dto: new user_dto_1.RegisterDto() }), (0, exception_middleware_1.exceptionEscalator)(userController.register));
exports.userRoutes.get("/regenerate", (0, validators_helper_1.validator)({ dto: new user_dto_1.EmailDto() }), (0, exception_middleware_1.exceptionEscalator)(userController.regenerateActivation));
exports.userRoutes.post("/login", (0, validators_helper_1.validator)({ dto: new user_dto_1.LoginDto() }), (0, exception_middleware_1.exceptionEscalator)(userController.login));
exports.userRoutes.post("/activate/:activationId", (0, exception_middleware_1.exceptionEscalator)(userController.activate));
exports.userRoutes.post("/forgot-password", (0, validators_helper_1.validator)({ dto: new user_dto_1.EmailDto() }), (0, exception_middleware_1.exceptionEscalator)(userController.forgotPassword));
exports.userRoutes.post("/reset-password", (0, validators_helper_1.validator)({ dto: new user_dto_1.ResetPasswordDto() }), auth_middleware_1.protect, (0, exception_middleware_1.exceptionEscalator)(userController.resetPassword));
exports.userRoutes.get("/me", auth_middleware_1.protect, (0, exception_middleware_1.exceptionEscalator)(userController.me));
exports.userRoutes.get("/:userId", (0, exception_middleware_1.exceptionEscalator)(userController.getById));
